// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace managementAPI.Migrations
{
    [DbContext(typeof(CarManagementContex))]
    [Migration("20210511150551_InitialSchema")]
    partial class InitialSchema
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Car", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("brand")
                        .HasColumnType("text")
                        .HasColumnName("brand");

                    b.Property<string>("color")
                        .HasColumnType("text")
                        .HasColumnName("color");

                    b.Property<string>("model")
                        .HasColumnType("text")
                        .HasColumnName("model");

                    b.Property<decimal>("price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.HasKey("id")
                        .HasName("pk_cars");

                    b.ToTable("cars");
                });

            modelBuilder.Entity("Deal", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("car_idid")
                        .HasColumnType("integer")
                        .HasColumnName("car_idid");

                    b.Property<int?>("manager_idid")
                        .HasColumnType("integer")
                        .HasColumnName("manager_idid");

                    b.Property<DateTime?>("name")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("name");

                    b.HasKey("id")
                        .HasName("pk_deal");

                    b.HasIndex("car_idid")
                        .HasDatabaseName("ix_deal_car_idid");

                    b.HasIndex("manager_idid")
                        .HasDatabaseName("ix_deal_manager_idid");

                    b.ToTable("deal");
                });

            modelBuilder.Entity("Manager", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("date_recruitment")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("date_recruitment");

                    b.Property<string>("first_name")
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<string>("last_name")
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<decimal>("salary")
                        .HasColumnType("numeric")
                        .HasColumnName("salary");

                    b.Property<int>("sales")
                        .HasColumnType("integer")
                        .HasColumnName("sales");

                    b.Property<string>("surname")
                        .HasColumnType("text")
                        .HasColumnName("surname");

                    b.HasKey("id")
                        .HasName("pk_managers");

                    b.ToTable("managers");
                });

            modelBuilder.Entity("Deal", b =>
                {
                    b.HasOne("Car", "car_id")
                        .WithMany()
                        .HasForeignKey("car_idid")
                        .HasConstraintName("fk_deal_cars_car_idid");

                    b.HasOne("Manager", "manager_id")
                        .WithMany()
                        .HasForeignKey("manager_idid")
                        .HasConstraintName("fk_deal_managers_manager_idid");

                    b.Navigation("car_id");

                    b.Navigation("manager_id");
                });
#pragma warning restore 612, 618
        }
    }
}
